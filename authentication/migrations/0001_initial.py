# Generated by Django 5.1.1 on 2024-09-20 05:32

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="AppUser",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                ("last_login", models.DateTimeField(blank=True, null=True, verbose_name="last login")),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("is_staff", models.BooleanField(default=False)),
                ("first_name", models.CharField(blank=True, max_length=100, null=True, verbose_name="first name")),
                ("last_name", models.CharField(blank=True, max_length=100, null=True, verbose_name="last name")),
                ("is_active", models.BooleanField(default=True)),
                ("employeeID", models.IntegerField(blank=True, null=True, unique=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Driver",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("driving_license_file", models.ImageField(blank=True, null=True, upload_to="")),
                ("driving_license_number", models.CharField(max_length=20)),
                (
                    "license_category",
                    models.CharField(
                        choices=[
                            ("A", "Category A"),
                            ("B", "Category B"),
                            ("C", "Category C"),
                            ("D1", "Category D1"),
                            ("D2", "Category D2"),
                            ("E", "Category E"),
                            ("F", "Category F"),
                        ],
                        default="B",
                        max_length=2,
                    ),
                ),
                ("delivery_date", models.DateField()),
                ("expiry_date", models.DateField()),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        limit_choices_to={"is_active": True},
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="created_drivers",
                        related_query_name="created_driver",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="driver",
                        related_query_name="drivers",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["license_category", "-expiry_date"],
                "unique_together": {("user", "driving_license_number")},
            },
        ),
    ]
